@model LiquorLand.ViewModels.productViewModel
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

<table class="table text-center" style="--bs-table-border-color: black;">
    <tbody>
        <tr>
            @foreach (var property in typeof(Product).GetProperties())
            {
                <th>@property.Name</th>
            }
            <th>Product Options</th>
        </tr>
        @foreach (Product p in Model.all_products)
        {
            <tr id="@p.Serial">
                @foreach (var property in typeof(Product).GetProperties())
                {
                    @if (property.Name == "ProductImage")
                    {
                        <td><img src=@property.GetValue(p) style="object-fit:contain; width: 100px; height: 130px;" /></td>
                    }
                    else
                    {
                        @if (property.Name == "Stock" && (int)property.GetValue(p) == 0)
                        {
                            <script>
                                document.getElementById(@p.Serial).style="--bs-table-bg: rgba(255, 99, 71, 0.9);"
                            </script>
                        }
                        <td>@property.GetValue(p)</td>
                    }
                }
                <td>
                    <div class="d-flex flex-row gap-2">
                        <a href=@Url.Action("Edit", "User", p) class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit Product">Edit</a>
                        <button class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Order Stock">Order</button>
                        <button class="btn btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Remove Product">X</button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>