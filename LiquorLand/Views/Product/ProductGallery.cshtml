@model LiquorLand.ViewModels.productViewModel
@{
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js">
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="~/css/productGallery.css" asp-append-version="true" />

<script>
    var page = 1;
    var searchParams = new URLSearchParams(window.location.search);
    var cat = searchParams.get('category');
    var sub = searchParams.get('sub');
    var term = searchParams.get('word');
    var sortType = null;
    var filterData = null;

    if(cat != null){
        $(document).ready(function() {$('#category').prop('value', cat);});
        $(document).ready(function() {$('#category').prop('disabled', true);});
    }
    if(sub != null){
        $(document).ready(function() {$('#sub').prop('value', sub)});
        $(document).ready(function() {$('#sub').prop('disabled', true)});
    }

    $(document).ready(function(){
        function getFilterData(){
            return {
                serial: $('#serial').val(),
                country: $('#country').val(),
                maker: $('#maker').val(),
                name: $('#name').val(),
                category: $('#category').val(),
                sub: $('#sub').val(),
                price: $('#price').val(),
                volume: $('#volume').val(),
                alpercent: $('#alch').val(),
                searchTerm: term,
                sort: sortType,
                productAmount: 10,
                page: page
            };
        };

        function loadMore(){
            page++

            filterData = getFilterData();

            $.ajax({
                url: '@Url.Action("loadMoreProducts", "Product")',
                type: 'Get',
                data: {
                    sort: sortType,
                    filterData: filterData,
                },
                success: function(result){
                    $('#productGallery').html(result);
                    $(".loadProducts").click(loadMore);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            })
        };

        function sort(){
            sortType = $(this).data("sort")
            page = 1;
            filterData = getFilterData();

            $.ajax({
                url: '@Url.Action("SortGallery", "Product")',
                type: 'Get',
                data: {
                    sort: sortType,
                    filterData: filterData
                },
                success: function(result) {
                    $('#productGallery').html(result);
                    $(".loadProducts").click(loadMore);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        }

        function filter(){
            page = 1;

            filterData = getFilterData()

            $.ajax({
                url: '@Url.Action("FilterProductSearch", "Product")',
                type: 'GET',
                data: filterData,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    // Replace the product list with filtered data
                    $('#productGallery').html(result);
                    $(".loadProducts").click(loadMore);
                },
                error: function (xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        }

        function clear(){
            const inputs = document.querySelectorAll("input")
            for(const input of inputs){
                input.value = null;
                input.disabled = false;
            }

            sortType = null;
            page = 1;

            $.ajax({
                url: '@Url.Action("FilterProductSearch", "Product")',
                type: 'GET',
                data: {searchTerm: term, productAmount: 10, page: page},
                contentType: 'application/json; charset=utf-8',
                success: function(result) {
                    // Replace the product list with filtered data
                    $('#productGallery').html(result);
                    $(".loadProducts").click(loadMore);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        }

        $(".loadProducts").click(loadMore)
        $(".SortType").click(sort)
        $("#filterAll").click(filter)
        $("#clearAll").click(clear)

        $(".sortButton").click(function() {
            // Toggle width between 0 and 50vw
            var newWidth = $(".sortBox").width() > 0 ? 0 : '81vw';
            page = 1;

            $(".sortBox").animate({
                width: newWidth
            }, 150);
        });
    });
</script>

<div class="galleryContainer">

    <div class="sorter">
        <button type="button" id="sortButton" class="btn btn-secondary sortButton">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-sort-down" viewBox="0 0 16 16">
                <path d="M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1z"></path>
            </svg>
        </button>

        <div class="sortBox">
            <btn class="btn SortType" data-sort="pdn">Price ↑</btn>
            <btn class="btn SortType" data-sort="pup">Price ↓</btn>
            <btn class="btn SortType" data-sort="ndn">Name ↑</btn>
            <btn class="btn SortType" data-sort="nup">Name ↓</btn>
            <btn class="btn SortType" data-sort="adn">Alcohol% ↑</btn>
            <btn class="btn SortType" data-sort="aup">Alcohol% ↓</btn>
            <btn class="btn SortType" data-sort="vdn">Volume ↑</btn>
            <btn class="btn SortType" data-sort="vup">Volume ↓</btn>
        </div>
    </div>

    <div class="searchFiltersContainer">
        <div class="searchFilters">
            <input type="text" id="serial" name="serial" placeholder="Serial" />
            <input type="text" id="category" name="category" placeholder="Category" />
            <input type="text" id="sub" name="sub" placeholder="Sub Category" />
            <input type="text" id="name" name="name" placeholder="Name" />
            <input type="number" step="0.01" min="0" id="price" name="price" placeholder="Price" />
            <input type="number" step="0.1" min="0" id="alch" name="alch" placeholder="Alcohol %" />
            <input type="number" step="1" min="0" id="volume" name="volume" placeholder="Volume" />
            <input type="text" id="country" name="country" placeholder="Country" />
            <input type="text" id="maker" name="maker" placeholder="Maker" />
            <button class="btn btn-warning rounded-pill" id="filterAll">Filter Products</button>
            <button class="btn btn-warning rounded-pill" id="clearAll">Clear All</button>
        </div>
    </div>

    <div id="productGallery" class="row g-0 mb-5 mb">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (Model.all_products.Count == 0)
        {
            <div>No products found</div>
        }
        else
        {
            @foreach (Product p in Model.all_products)
            {
                <div class="col-md-3 overflow-visible m-2" style="width: 282.2px; margin-left: 10px;">
                    <div class="card border-dark text-center rounded-5 align-items-center productCard" style="background-color: #31363F; color: #EEEEEE;">

                        @if (User.IsInRole("Admin"))
                        {
                            <a href=@Url.Action("Edit", "User", p) class="top-0 start-0 position-absolute border-hidden" style="transform:translate(10px,10px)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                </svg>
                            </a>
                        }
                        @if (p.Stock == 0)
                        {
                            <span class="badge rounded-3 text-bg-danger align-self-center fs-6 position-absolute" style="transform: translateY(150px);">Out of Stock</span>
                        }
                        @if (p.Stock < 10 && p.Stock != 0)
                        {
                            <span class="badge rounded-3 text-bg-danger align-self-center fs-6 position-absolute" style="transform: translateY(150px);">Only @p.Stock left!</span>
                        }
                        <a asp-action="productsShow" asp-controller="Product" asp-route-ProductName=@p.ProductName>
                            <div class="transition ease-in duration-200 scale-110-hover">
                                <input type="hidden" name="serial" value="@p.Serial" />
                                <input type="image" src="@p.ProductImage" alt="Submit" class="custom-img" style="transform: translateY(-50px)" />
                            </div>
                        </a>
                        <h5 class="card-title">@p.ProductName</h5>
                        <span class="border-top border-dashed border-light w-50"></span>
                        <div class="card-body">
                            <p class="card-text">@p.ProductSubCategory @p.ProductCategory</p>
                            <p class="card-text"><span class="badge bg-primary">Price: </span>$@p.ProductPrice</p>
                            @if (p.Stock == 0)
                            {
                                <button class="btn btn-success rounded-3">Notify when back in stock</button>
                            }
                            else
                            {
                                <div class="productButtons">
                                    <button class="btn btn-primary rounded-3">Buy Now</button>
                                <button class="btn btn-warning rounded-3 addToCartButton" data-serial="@p.Serial">Add to cart</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        @if (Model.total_products > Model.product_page * 10)
        {
            <div class="LoadMore">
                <button class="btn btn-primary loadProducts">Load More Products</button>
            </div>
        }
    </div>
</div>