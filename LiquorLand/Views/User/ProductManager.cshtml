@model LiquorLand.ViewModels.productViewModel

<style>
    .productManager {
        display: grid;
        width: 90%;
        justify-self: center;
        margin: auto;
        background-color: #EEEEEE;
    }

    .filters {
        display: flex;
        flex-direction: row;
        justify-self: center;
        gap: 20px;
        align-items: center;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* For Firefox */
    input[type="number"] {
        -moz-appearance: textfield;
    }

    input{
        width: 6vw;
    }
</style>

<div class="productManager table-responsive mt-5">
    <div class="filters mt-2 mb-2">asdfasdfasdf
        <div class="form-check form-switch p-0">
            <div class="d-flex flex-column-reverse align-items-center gap-1">
                <input class="form-check-input ms-0" type="checkbox" role="switch" id="instock" />
                <label class="form-check-label" for="instock">In Stock</label>
            </div>
        </div>
        <div class="form-check form-switch p-0">
            <div class="d-flex flex-column-reverse align-items-center gap-1">
                <input class="form-check-input ms-0" type="checkbox" role="switch" id="outstock" />
                <label class="form-check-label" for="outstock">Out of Stock</label>
            </div>
        </div>
        <div>
            <input type="text" id="serial" name="serial" placeholder="Serial" />
            <input type="text" id="category" name="category" placeholder="Category" />
            <input type="text" id="sub" name="sub" placeholder="Sub Category" />
            <input type="text" id="name" name="name" placeholder="Name" />
        </div>
        <div>
            <input type="number" step="0.01" min="0" id="price" name="price" placeholder="Price" />
            <input type="number" step="0.1" min="0" id="alch" name="alch" placeholder="Alcohol %" />
            <input type="number" step="1" min="0" id="volume" name="volume" placeholder="Volume" />
        </div>
        <div>
            <input type="text" id="country" name="country" placeholder="Country" />
            <input type="text" id="maker" name="maker" placeholder="Maker" />
            <input type="text" id="free" name="free" placeholder="Search in Description" />
        </div>
        <button class="btn btn-warning rounded-pill" id="filterAll">Filter Products</button>
        <button class="btn btn-warning rounded-pill" id="clearAll">Clear All</button>
    </div>
    <div class="productTable">
        <table class="table text-center" style="--bs-table-border-color: black;">
            <tbody>
                <tr>
                    @foreach (var property in typeof(Product).GetProperties())
                    {
                        <th>@property.Name</th>
                    }
                    <th>Product Options</th>
                </tr>
                @foreach (Product p in Model.all_products)
                {
                    <tr id="@p.Serial">
                        @foreach (var property in typeof(Product).GetProperties())
                        {
                            @if (property.Name == "ProductImage")
                            {
                                <td><img src=@property.GetValue(p) style="object-fit:contain; width: 100px; height: 130px;" /></td>
                            }
                            else
                            {
                                @if (property.Name == "Stock" && (int)property.GetValue(p) == 0)
                                {
                                    <script>
                                        document.getElementById(@p.Serial).style="--bs-table-bg: rgba(255, 99, 71, 0.9);"
                                    </script>
                                }
                                <td>@property.GetValue(p)</td>
                            }
                        }
                        <td>
                            <div class="d-flex flex-row gap-2">
                                <a href=@Url.Action("Edit", "User", p) class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit Product">Edit</a>
                                <button class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Order Stock">Order</button>
                                <div id="@p.Serial" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Remove Product">
                                    <button class="btn btn-danger removeitem" id="removeitem" data-bs-toggle="modal" data-bs-target="#removeItem">X</button>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="removeItem" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content" style="background-color: #31363F">
      <div class="modal-header">
        <h5 class="modal-title">Remove Product</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="modalbody">
        
      </div>
      <div class="modal-footer align-items-center justify-content-center">
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Cancel</button>
        <a id="removebtn" class="btn btn-danger">Remove</a>
      </div>
    </div>
  </div>
</div>

<script>
    let tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    let tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

    $(document).ready(function() {
        $('#instock').change(function() {
            var isInStock = $(this).is(':checked');

            if(isInStock)
                document.getElementById("outstock").disabled = true
            else
                document.getElementById("outstock").disabled = false

            var filterData = {
                serial: $('#serial').val(),
                country: $('#country').val(),
                maker: $('#maker').val(),
                name: $('#name').val(),
                instock: isInStock,
                outstock: $('#outstock').is(':checked'),
                category: $('#category').val(),
                sub: $('#sub').val(),
                price: $('#price').val(),
                volume: $('#volume').val(),
                alpercent: $('#alch').val(),
                // Add other form parameters here
            };

            $.ajax({
                url: '@Url.Action("FilterProductManager", "Product")',
                type: 'GET',
                data: filterData,
                success: function(result) {
                    // Replace the product list with filtered data
                    $('.productTable').html(result);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        });
    });

    $(document).ready(function() {
        $('#outstock').change(function() {
            var outOfStock = $(this).is(':checked');

            if(outOfStock)
                document.getElementById("instock").disabled = true
            else
                document.getElementById("instock").disabled = false

            var filterData = {
                serial: $('#serial').val(),
                country: $('#country').val(),
                maker: $('#maker').val(),
                name: $('#name').val(),
                instock: $('#instock').is(':checked'),
                outstock: outOfStock,
                category: $('#category').val(),
                sub: $('#sub').val(),
                price: $('#price').val(),
                volume: $('#volume').val(),
                alpercent: $('#alch').val(),
                // Add other form parameters here
            };

            $.ajax({
                url: '@Url.Action("FilterProductManager", "Product")',
                type: 'GET',
                data: filterData,
                success: function(result) {
                    // Replace the product list with filtered data
                    $('.productTable').html(result);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        });
    });

    $(document).ready(function() {
        $('#filterAll').click(function() {
            var filterData = {
                serial: $('#serial').val(),
                country: $('#country').val(),
                maker: $('#maker').val(),
                name: $('#name').val(),
                instock: $('#instock').is(':checked'),
                outstock: $('#outstock').is(':checked'),
                category: $('#category').val(),
                sub: $('#sub').val(),
                price: $('#price').val(),
                volume: $('#volume').val(),
                alpercent: $('#alch').val(),
                // Add other form parameters here
            };
            $.ajax({
                url: '@Url.Action("FilterProductManager", "Product")',
                type: 'GET',
                data: filterData,
                success: function(result) {
                    // Replace the product list with filtered data
                    $('.productTable').html(result);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        });
    });

    $(document).ready(function() {
        $('#clearAll').click(function() {
            const inputs = document.querySelectorAll("input")
            for(const input of inputs){
                input.value = null;
            }
            $.ajax({
                url: '@Url.Action("FilterProductManager", "Product")',
                type: 'GET',
                success: function(result) {
                    // Replace the product list with filtered data
                    $('.productTable').html(result);
                },
                error: function(xhr, status, error) {
                    // Handle error
                    alert('Error: ' + error);
                }
            });
        });
    });

    $(document).ready(function() {
        $('.removeitem').click(function() {
            console.log(322)
            const modalBody = document.getElementById("modalbody")
            const modalRemove = document.getElementById("removebtn")
            const serial = $(this).parent()[0].id

            modalBody.innerHTML = "<p>Are you sure you want to remove " + serial + "?</p>"

            modalRemove.href = "@Url.Action("RemoveProduct", "Product", new {serial = "text"})".replace("text", serial)
        });
    });
</script>